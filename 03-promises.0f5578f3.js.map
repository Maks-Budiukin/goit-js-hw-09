{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,mBACnCC,EAASF,SAASC,cAAc,SAEtCF,EAAUI,iBAAiB,SAiB3B,WACIC,MAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAWD,GAAK,EAEjCE,EAAcF,EAAGG,GACjBA,GAAYC,C,IAtBpBR,EAAOC,iBAAiB,SAOxB,WAEAM,EAAWE,OAAOT,EAAOU,MAAMC,OAC/BH,EAAUC,OAAOT,EAAOY,KAAKD,OAC7BN,EAAYI,OAAOT,EAAOa,OAAOF,M,IATjC,IAAIJ,EAAW,EACXC,EAAU,EACVH,EAAY,EAuBhB,SAASC,EAAcQ,EAAUC,GAG7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KAE9BC,YAAW,KAEHN,EACAI,EAAQ,CAAEG,SAAAT,EAAUJ,MAAAK,IAEpBM,EAAO,CAAEE,SAAAT,EAAUJ,MAAAK,GAAQ,GAGhCR,EAAS,IAIXiB,MAAK,EAACD,SAAEA,EAAQb,MAAEA,MACff,EAAA8B,OAAOC,QAAQ,qBAAqBH,QAAeb,MAAU,IAEhEiB,OAAM,EAACJ,SAAEA,EAAQb,MAAEA,MAChBf,EAAA8B,OAAOG,QAAQ,oBAAoBL,QAAeb,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitBtn = document.querySelector('[type=\"submit\"]');\nconst formEl = document.querySelector('.form');\n\nsubmitBtn.addEventListener('click', onClick);\nformEl.addEventListener('input', onInput);\n\nlet delayVal = 0;\nlet stepVal = 0;\nlet amountVal = 0;\n\n\nfunction onInput() {\n\ndelayVal = Number(formEl.delay.value);\nstepVal = Number(formEl.step.value);\namountVal = Number(formEl.amount.value);\n\n}\n\n\nfunction onClick() {\n    event.preventDefault();\n      \n    for (let i = 1; i <= amountVal; i += 1) {\n        \n        createPromise(i, delayVal);\n        delayVal += stepVal;\n    }\n   \n}\n\nfunction createPromise(position, delay) {\n\n    \n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n\n            setTimeout(() => {\n\n                if (shouldResolve) {\n                    resolve({ position, delay });\n                } else {\n                    reject({ position, delay });\n                }\n\n            }, delayVal)   \n        });\n\n        promise\n            .then(({ position, delay }) => {\n                Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n            });\n    }\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$formEl","addEventListener","event","preventDefault","i","$47d4ff9957288465$var$amountVal","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$delayVal","$47d4ff9957288465$var$stepVal","Number","delay","value","step","amount","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.0f5578f3.js.map"}